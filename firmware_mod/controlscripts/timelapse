#!/bin/sh
PIDFILE='/run/timelapse.pid'
SAVE_DIR="/system/sdcard/DCIM/timelapse/$(date +%Y-%m-%d)"

status()
{  PID=$(cat $PIDFILE)
   if [ "$PID" != "" ]; then
   cat $PIDFILE
   fi
}

start()
{
  LOG=/dev/null
  echo "Starting timelapse"
  /system/sdcard/bin/busybox nohup /system/sdcard/scripts/timelapse.sh &> /dev/null &
  PID=$!
  echo $PID > $PIDFILE
  echo $PID
}

stop()
{ 
  PID=$(cat $PIDFILE)
  kill -9 $PID
  rm $PIDFILE
  
#switch current folder to timelapse
cd $SAVE_DIR

wc -c *.jpg > tmp3.txt
lines2=$(cat tmp3.txt | wc -l)
sed -n $((lines2))p tmp3.txt > tmp4.txt
B=$(grep -o "[0-9]*" tmp4.txt)
average=$(($B/$lines2))

#write all imagefiles under average into temp file
find . -type f -size -$(($average-$average/20))c -iname '*.jpg' > tmp1.txt
#take only the numbers out of first temp file and write into another
grep -o "[0-9]*" tmp1.txt > tmp2.txt

#set counter and get number of lines 
counter=1
lines=$(cat tmp2.txt | wc -l)

while [ $counter -le $lines ]; do
    #get the first line, then second line etc. 
	X=$(sed -n $(($counter))p tmp2.txt)
	#get first line, delete leading zeros add +1 and add leading zeros again
	Y=$(echo $X | sed -e 's/^0*//')
	Z=$(($Y+1))
	A=$(printf '%05d' "$Z")
	#Y+Z+A together
	#H=$(printf '%05d' "$(($(($(echo $X | sed -e 's/^0*//')+1))))")
	cp img$A.jpg img$X.jpg
	counter=$(($counter + 1))
	done
rm tmp1.txt
rm tmp2.txt
rm tmp3.txt
rm tmp4.txt

/system/sdcard/bin/avconv -y -r 30 -f image2 -i img%05d.jpg  $(date +%Y-%m-%d_%H%M%S).mov
#rm *.jpg
}

if [ $# -eq 0 ]; then
  start
else
  case $1 in start|stop|status)
    $1
    ;;
  esac
fi
